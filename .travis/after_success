#!bash

# Only upload version tags.
if ! [[ "$TRAVIS_TAG" =~ ^v[0-9] ]]; then
  echo Skipping release upload because this build is not for a release tag.
  return 0
fi

[ -n "$GITHUB_TOKEN" ] || { echo "Don't appear to have GitHub token, cannot continue."; return 0; }
[ -e "/tmp/crosscompiled" ] || { echo "Not crosscompiled?"; return 1; }

# Make archives.
echo Archiving releases...
ACME_DIR="$(pwd)"
cd "$GOPATH/releasing/idist"
for x in *; do
  echo "$x"
  cp "$GOPATH/src/github.com/$TRAVIS_REPO_SLUG/.travis/dist-readme.md" "$x"/README.md || \
  cp "$GOPATH/src/github.com/$TRAVIS_REPO_SLUG/README.md" "$x"/ || true
  tar -zcf "../dist/$(basename "$x").tar.gz" "$x"
done

# Must be in the right directory when calling ghr.
cd "$ACME_DIR"

echo Uploading releases...
TRAVIS_REPO_OWNER="$(echo "$TRAVIS_REPO_SLUG" | sed 's#/.*##g')"
travis_retry ghr -u "$TRAVIS_REPO_OWNER" "$TRAVIS_TAG" "$GOPATH/releasing/dist/"

# Prepare Ubuntu PPA signing key.
echo Preparing Ubuntu PPA signing key...
cd "$ACME_DIR/.travis"
wget -c "https://www.devever.net/~hl/f/gnupg-ppa-data.tar.gz.enc"
openssl enc -d -aes-128-cbc -md sha256 -salt -pass env:PPA_ENCRYPTION_PASS -in "gnupg-ppa-data.tar.gz.enc" -out "gnupg-ppa-data.tar.gz"
tar xvf gnupg-ppa-data.tar.gz
shred -u gnupg-ppa-data.tar.*
cd "$ACME_DIR"
export GNUPGHOME="$ACME_DIR/.travis/.gnupg"

# Upload Ubuntu PPA package.
cat <<'END' > "$HOME/.devscripts"
DEBSIGN_KEYID="Hugo Landau (2016 PPA Signing) <hlandau@devever.net>"
END

UBUNTU_RELEASES="xenial precise trusty vivid wily"
for distro_name in $UBUNTU_RELEASES; do
  echo Creating Debian source environment for ${distro_name}...
  $GOPATH/src/github.com/$TRAVIS_REPO_SLUG/.travis/make_debian_env "$GOPATH/releasing/dbuilds/$distro_name" "$GOPATH/releasing/dist/" "$TRAVIS_TAG" "$distro_name"

  echo Creating Debian source archive for ${distro_name}...
  cd $GOPATH/releasing/dbuilds/$distro_name/acmetool_*[0-9]
  debuild -S
done

echo Deleting keys...
find "$GNUPGHOME" -type f -exec shred -u '{}' ';'
rm -rf "$GNUPGHOME"

echo Uploading Debian source archive for ${distro_name}...
for distro_name in $UBUNTU_RELEASES; do
  cd "$GOPATH/releasing/dbuilds/$distro_name"

  (
    echo 'open ppa.launchpad.net'
    echo 'set passive on'
    echo 'cd ~hlandau/rhea'
    for f in ./acmetool_*.dsc ./acmetool_*.orig.tar.gz ./acmetool*.diff.gz ./acmetool_*_source.changes; do
      echo "put $f"
    done
    echo 'quit'
  ) | ncftp
done

echo Done
