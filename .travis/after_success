#!/bin/bash

# Only upload version tags.
if ! [[ "$TRAVIS_TAG" =~ ^v[0-9] ]]; then
  echo Skipping release upload because this build is not for a release tag.
  return 0
fi

if [ -z "$GITHUB_TOKEN" ]; then
  echo "Don't appear to have GitHub token, cannot continue."
  return 0
fi

# Make archives.
echo Archiving releases...
ACME_DIR="$(pwd)"
cd "$GOPATH/releasing/idist"
for x in *; do
  echo "$x"
  cp "$GOPATH/src/github.com/$TRAVIS_REPO_SLUG/.travis/dist-readme.md" "$x"/README.md || \
  cp "$GOPATH/src/github.com/$TRAVIS_REPO_SLUG/README.md" "$x"/ || true
  tar -zcf "../dist/$(basename "$x").tar.gz" "$x"
done

# Must be in the right directory when calling ghr.
cd "$ACME_DIR"

echo Uploading releases...
TRAVIS_REPO_OWNER="$(echo "$TRAVIS_REPO_SLUG" | sed 's#/.*##g')"
travis_retry ghr -u "$TRAVIS_REPO_OWNER" "$TRAVIS_TAG" "$GOPATH/releasing/dist/"

# Prepare Ubuntu PPA signing key.
echo Preparing Ubuntu PPA signing key...
cd "$ACME_DIR/.travis"
wget -c "https://www.devever.net/~hl/f/gnupg-ppa-data.tar.gz.enc"
openssl aes-256-cbc -K $encrypted_fa74305a4981_key -iv $encrypted_fa74305a4981_iv -in "gnupg-ppa-data.tar.gz.enc" -out "gnupg-ppa-data.tar.gz" -d
tar xvf gnupg-ppa-data.tar.gz
shred -u gnupg-ppa-data.tar.*
cd "$ACME_DIR"
export GNUPGHOME="$ACME_DIR/.travis/.gnupg"

# Upload Ubuntu PPA package.
echo Creating Debian source environment...
$GOPATH/src/github.com/$TRAVIS_REPO_SLUG/.travis/make_debian_env "$GOPATH/releasing/dbuilds" "$GOPATH/releasing/dist/" "$TRAVIS_TAG"

echo Creating Debian source archive...
cd $GOPATH/releasing/dbuilds/acmetool_*[0-9]
debuild -S

echo Deleting keys...
find "$GNUPGHOME" -type f -exec shred -u '{}' ';'
rm -rf "$GNUPGHOME"

echo Uploading Debian source archive...
cd $GOPATH/releasing/dbuilds
#dput ppa:hlandau/releases ./acmetool_*_source.changes

FILES=./acmetool_*.dsc ./acmetool_*.orig.tar.gz ./acmetool*.diff.gz ./acmetool_*_source.changes
(
  echo "open -u anonymous,anon@anon ppa.launchpad.net"
  echo 'cd ~hlandau/testppa'
  for f in $FILES; do
    echo "put $f"
  done
  echo "quit"
) | lftp

echo Done
